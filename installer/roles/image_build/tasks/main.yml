---
- name: Set global version if not provided
  set_fact:
    awx_version: "{{ lookup('file', playbook_dir + '/../VERSION') }}"
  when: awx_version is not defined

- name: Verify awx-logos directory exists for official install
  stat:
    path: "../../awx-logos"
  delegate_to: localhost
  register: logosdir
  failed_when: logosdir.stat.isdir is not defined or not logosdir.stat.isdir
  when: awx_official|default(false)|bool

- name: Copy logos for inclusion in sdist
  copy:
    src: "../../awx-logos/awx/ui/client/assets"
    dest: "../awx/ui/client/"
  delegate_to: localhost
  when: awx_official|default(false)|bool

- name: Set sdist file name
  set_fact:
    awx_sdist_file: "awx-{{ awx_version }}.tar.gz"

- name: AWX Distribution
  debug:
    msg: "{{ awx_sdist_file }}"

- name: Stat distribution file
  stat:
    path: "../dist/{{ awx_sdist_file }}"
  delegate_to: localhost
  register: sdist

- name: Clean distribution
  shell: make clean
  environment:
    DEV_CONTAINER_RUNTIME: "{{ container_runtime }}"
  args:
    chdir: ..
  ignore_errors: true
  when: not sdist.stat.exists
  delegate_to: localhost

- name: Build sdist builder image (docker)
  docker_image:
    build:
      path: "{{ role_path }}/files"
      dockerfile: Dockerfile.sdist
      pull: false
      args:
        http_proxy: "{{ http_proxy | default('') }}"
        https_proxy: "{{ https_proxy | default('') }}"
        no_proxy: "{{ no_proxy | default('') }}"
    name: awx_sdist_builder
    tag: "{{ awx_version }}"
    source: 'build'
    force_source: true
  delegate_to: localhost
  when: use_container_for_build|default(true)|bool and (container_runtime == 'docker')

- name: BLOCK Build sdist builder image (podman)
  block:
    - name: Copy Dockerfile.sdist to Dockerfile for podman
      copy:
        src: "{{ role_path }}/files/Dockerfile.sdist"
        dest: "{{ role_path }}/files/Dockerfile"

    - name: Build sdist builder image (podman)
      containers.podman.podman_image:
        path: "{{ role_path }}/files/"
        pull: false
        name: "awx_sdist_builder:{{ awx_version }}"
        state: 'build'

    - name: Remove sdist Dockerfile from podman build
      copy:
        src: "{{ role_path }}/files/Dockerfile.sdist"
        dest: "{{ role_path }}/files/Dockerfile"
  delegate_to: localhost
  when: use_container_for_build|default(true)|bool and (container_runtime == 'podman')

- name: Build AWX distribution using docker
  docker_container:
    env:
      http_proxy: "{{ http_proxy | default('') }}"
      https_proxy: "{{ https_proxy | default('') }}"
      no_proxy: "{{ no_proxy | default('') }}"
    image: "awx_sdist_builder:{{ awx_version }}"
    name: awx_sdist_builder
    state: started
    detach: false
    volumes:
      - ../:/awx:Z
  delegate_to: localhost
  when: use_container_for_build|default(true)|bool and (container_runtime == 'docker')

- name: Build AWX distribution using podman
  containers.podman.podman_container:
    image: "awx_sdist_builder:{{ awx_version }}"
    name: awx_sdist_builder
    state: started
    detach: false
    volumes:
      - ../:/awx:Z
  delegate_to: localhost
  when: use_container_for_build|default(true)|bool and (container_runtime == 'podman')

- name: Build AWX distribution locally
  shell: make sdist
  environment:
    DEV_CONTAINER_RUNTIME: "{{ container_runtime }}"
  args:
    chdir: ..
  delegate_to: localhost
  when: not use_container_for_build|default(true)|bool

- name: Set container build base path
  set_fact:
    container_base_path: "{{ awx_local_base_config_path|default('/tmp') }}/container-image"

- name: Set awx image name
  set_fact:
    awx_image: "{{ awx_image|default('awx') }}"

- name: Ensure directory exists
  file:
    path: "{{ container_base_path }}"
    state: directory
  delegate_to: localhost

- name: Stage sdist
  copy:
    src: "../dist/{{ awx_sdist_file }}"
    dest: "{{ container_base_path }}/{{ awx_sdist_file }}"
  delegate_to: localhost

- name: Template web Dockerfile
  template:
    src: Dockerfile.j2
    dest: "{{ container_base_path }}/Dockerfile"
  delegate_to: localhost

- name: Stage launch_awx
  copy:
    src: launch_awx.sh
    dest: "{{ container_base_path }}/launch_awx.sh"
    mode: '0755'
  delegate_to: localhost

- name: Stage launch_awx_task
  template:
    src: launch_awx_task.sh.j2
    dest: "{{ container_base_path }}/launch_awx_task.sh"
    mode: '0755'
  delegate_to: localhost

- name: Stage rsyslog.conf
  copy:
    src: rsyslog.conf
    dest: "{{ container_base_path }}/rsyslog.conf"
    mode: '0660'
  delegate_to: localhost

- name: Stage supervisor.conf
  copy:
    src: supervisor.conf
    dest: "{{ container_base_path }}/supervisor.conf"
  delegate_to: localhost

- name: Stage supervisor_task.conf
  copy:
    src: supervisor_task.conf
    dest: "{{ container_base_path }}/supervisor_task.conf"
  delegate_to: localhost

- name: Stage settings.py
  copy:
    src: settings.py
    dest: "{{ container_base_path }}/settings.py"
  delegate_to: localhost

- name: Stage requirements
  copy:
    src: ../requirements/
    dest: "{{ container_base_path }}/requirements"
  delegate_to: localhost

- name: Stage config watcher
  copy:
    src: ../tools/scripts/config-watcher
    dest: "{{ container_base_path }}/config-watcher"
    mode: 0755
  delegate_to: localhost

- name: Stage Makefile
  copy:
    src: ../Makefile
    dest: "{{ container_base_path }}/Makefile"
  delegate_to: localhost

- name: Build base awx image (docker)
  docker_image:
    build:
      path: "{{ container_base_path }}"
      dockerfile: Dockerfile
      pull: false
      args:
        http_proxy: "{{ http_proxy | default('') }}"
        https_proxy: "{{ https_proxy | default('') }}"
        no_proxy: "{{ no_proxy | default('') }}"
    name: "{{ awx_image }}"
    tag: "{{ awx_version }}"
    source: 'build'
    force_source: true
  when: container_runtime == 'docker'
  delegate_to: localhost

- name: Build base awx image (podman)
  containers.podman.podman_image:
    path: "{{ role_path }}"
    pull: false
    name: "{{ awx_image }}:{{ awx_version }}"
    state: 'build'
  when: container_runtime == 'podman'
  delegate_to: localhost

- name: Tag awx images as latest
  command: "{{container_runtime}} tag {{ item }}:{{ awx_version }} {{ item }}:latest"
  delegate_to: localhost
  with_items:
    - "{{ awx_image }}"

- name: Clean container base directory
  file:
    path: "{{ container_base_path }}"
    state: absent
  when: cleanup_container_base|default(True)|bool
  delegate_to: localhost
